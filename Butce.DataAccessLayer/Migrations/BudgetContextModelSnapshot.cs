// <auto-generated />
using System;
using Butce.DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Butce.DataAccessLayer.Migrations
{
    [DbContext(typeof(BudgetContext))]
    partial class BudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Butce.EntityLayer.Entities.AddUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("AddUsers");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.AppControl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("AppControls")
                        .HasColumnType("bit");

                    b.Property<int>("ExpensesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExpensesID");

                    b.ToTable("AppControls");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Approval", b =>
                {
                    b.Property<int>("ApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("ExpensesID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("VATID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneTypeID")
                        .HasColumnType("int");

                    b.HasKey("ApprovalID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ExpensesID");

                    b.HasIndex("LevelID");

                    b.HasIndex("VATID");

                    b.HasIndex("WorkDoneID");

                    b.HasIndex("WorkDoneTypeID");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Budget", b =>
                {
                    b.Property<int>("BudgetTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetTypeID"));

                    b.Property<string>("BudgetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BudgetTypeID");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.BudgetAmount", b =>
                {
                    b.Property<int>("BudgetAmountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetAmountID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("BudgetAmountID");

                    b.ToTable("BudgetAmounts");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.CompanyName", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("CompanyNames")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyID");

                    b.ToTable("CompanyNames");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Expenses", b =>
                {
                    b.Property<int>("ExpensesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpensesID"));

                    b.Property<int>("BudgetTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ExpensesType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExpensesID");

                    b.HasIndex("BudgetTypeID");

                    b.ToTable("Expensess");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Levels", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"));

                    b.Property<int?>("ExpensesID")
                        .HasColumnType("int");

                    b.Property<int>("LevelNo")
                        .HasColumnType("int");

                    b.HasKey("LevelID");

                    b.HasIndex("ExpensesID");

                    b.ToTable("Levelss");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Planning", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<float>("AvailableBudget")
                        .HasColumnType("real");

                    b.Property<int>("BudgetAmountID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("ExpensesID")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PlanningImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RemaningBudget")
                        .HasColumnType("real");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<float>("TotalExpenditure")
                        .HasColumnType("real");

                    b.Property<float>("UsableBudget")
                        .HasColumnType("real");

                    b.Property<int>("VATID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneTypeID")
                        .HasColumnType("int");

                    b.HasKey("PlanID");

                    b.HasIndex("BudgetAmountID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ExpensesID");

                    b.HasIndex("LevelID");

                    b.HasIndex("VATID");

                    b.HasIndex("WorkDoneID");

                    b.HasIndex("WorkDoneTypeID");

                    b.ToTable("Plannings");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Proxy", b =>
                {
                    b.Property<int>("ProxyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProxyID"));

                    b.Property<string>("PersonelTask")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProxyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ProxyID");

                    b.HasIndex("RoleID");

                    b.ToTable("Proxies");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Realization", b =>
                {
                    b.Property<int>("RealizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealizationID"));

                    b.Property<int>("BudgetTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<float>("RemainingBudget")
                        .HasColumnType("real");

                    b.Property<int>("SubLevelID")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<float>("TotalExpenditure")
                        .HasColumnType("real");

                    b.Property<float>("UsableBudget")
                        .HasColumnType("real");

                    b.Property<int>("VATID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDoneTypeID")
                        .HasColumnType("int");

                    b.HasKey("RealizationID");

                    b.HasIndex("BudgetTypeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ID");

                    b.HasIndex("LevelID");

                    b.HasIndex("SubLevelID");

                    b.HasIndex("VATID");

                    b.HasIndex("WorkDoneID");

                    b.HasIndex("WorkDoneTypeID");

                    b.ToTable("Realizations");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Refuse", b =>
                {
                    b.Property<int>("RefuseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefuseID"));

                    b.Property<int>("ExpensesID")
                        .HasColumnType("int");

                    b.Property<string>("RefuseReason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RefuseID");

                    b.HasIndex("ExpensesID");

                    b.ToTable("Refuses");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("PersonelRoles")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PersonelState")
                        .HasColumnType("bit");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.SubLevels", b =>
                {
                    b.Property<int>("SubLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubLevelID"));

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int>("SubLevelNo")
                        .HasColumnType("int");

                    b.HasKey("SubLevelID");

                    b.HasIndex("LevelID");

                    b.ToTable("SubLevelss");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.VAT", b =>
                {
                    b.Property<int>("VATID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VATID"));

                    b.Property<int>("VATRate")
                        .HasColumnType("int");

                    b.HasKey("VATID");

                    b.ToTable("VATs");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.WorkDone", b =>
                {
                    b.Property<int>("WorkDoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDoneID"));

                    b.Property<string>("WorkDoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkDoneID");

                    b.ToTable("WorkDones");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.WorkDoneType", b =>
                {
                    b.Property<int>("WorkDoneTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDoneTypeID"));

                    b.Property<string>("WorkDoneTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkDoneTypeID");

                    b.ToTable("WorkDoneTypes");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.AddUser", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.AppControl", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Approval", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.CompanyName", "CompanyName")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.Levels", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.VAT", "VAT")
                        .WithMany()
                        .HasForeignKey("VATID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDone", "WorkDone")
                        .WithMany()
                        .HasForeignKey("WorkDoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDoneType", "WorkDoneType")
                        .WithMany()
                        .HasForeignKey("WorkDoneTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyName");

                    b.Navigation("Expenses");

                    b.Navigation("Levels");

                    b.Navigation("VAT");

                    b.Navigation("WorkDone");

                    b.Navigation("WorkDoneType");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Expenses", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Budget", "Budget")
                        .WithMany()
                        .HasForeignKey("BudgetTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Levels", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID");

                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Planning", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.BudgetAmount", "BudgetAmount")
                        .WithMany()
                        .HasForeignKey("BudgetAmountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.CompanyName", "CompanyName")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.Levels", "Level")
                        .WithMany()
                        .HasForeignKey("LevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.VAT", "VAT")
                        .WithMany()
                        .HasForeignKey("VATID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDone", "WorkDone")
                        .WithMany()
                        .HasForeignKey("WorkDoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDoneType", "WorkDoneType")
                        .WithMany()
                        .HasForeignKey("WorkDoneTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetAmount");

                    b.Navigation("CompanyName");

                    b.Navigation("Expenses");

                    b.Navigation("Level");

                    b.Navigation("VAT");

                    b.Navigation("WorkDone");

                    b.Navigation("WorkDoneType");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Proxy", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Realization", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Budget", "Budget")
                        .WithMany()
                        .HasForeignKey("BudgetTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.CompanyName", "CompanyName")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.AppControl", "AppControl")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.Levels", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.SubLevels", "SubLevels")
                        .WithMany()
                        .HasForeignKey("SubLevelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.VAT", "VAT")
                        .WithMany()
                        .HasForeignKey("VATID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDone", "WorkDone")
                        .WithMany()
                        .HasForeignKey("WorkDoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Butce.EntityLayer.Entities.WorkDoneType", "WorkDoneType")
                        .WithMany()
                        .HasForeignKey("WorkDoneTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppControl");

                    b.Navigation("Budget");

                    b.Navigation("CompanyName");

                    b.Navigation("Levels");

                    b.Navigation("SubLevels");

                    b.Navigation("VAT");

                    b.Navigation("WorkDone");

                    b.Navigation("WorkDoneType");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.Refuse", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Butce.EntityLayer.Entities.SubLevels", b =>
                {
                    b.HasOne("Butce.EntityLayer.Entities.Levels", "Level")
                        .WithMany()
                        .HasForeignKey("LevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });
#pragma warning restore 612, 618
        }
    }
}
